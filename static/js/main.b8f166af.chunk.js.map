{"version":3,"sources":["components/common/TeamOmegalButton.js","components/common/TeamOmegalModalPopup.js","components/ListGroup.js","components/common/TeamOmegalHeader.js","components/common/TeamOmegalInputBox.js","components/ToDolist.js","App2.js","index.js"],"names":["TeamOmegalButton","onClick","props","id","style","backgroundColor","this","buttonColor","text","Component","TeamOmegalModalPopup","inputHandler","e","setState","tasklist","target","value","saveChange","modalEdit","state","idx","onCancel","console","log","task","showModal","className","type","placeholder","onChange","ListGroup","showModalHandler","length","map","onDelete","TeamOmegalHeader","TeamOmegalInputBox","onTrigger","event","inputVal","parentCallback","inputReset","isReset","ToDolist","addTask","previousState","taskName","resetInput","editTask","newList","element","handleCallback","childData","deleteTask","filter","bind","onEdit","App2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8f166af.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TeamOmegalButton extends Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                onClick={() => this.props.onClick(this.props.id)}\r\n                style={{ backgroundColor: this.props.buttonColor }}\r\n            >\r\n                {this.props.text}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamOmegalButton;","import React, { Component } from 'react';\r\nimport TeamOmegalButton from './TeamOmegalButton';\r\n\r\nclass TeamOmegalModalPopup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           tasklist:this.props.task,\r\n            showModal: false,\r\n        };\r\n    }\r\n    inputHandler=(e)=>{\r\n        this.setState({\r\n            tasklist: e.target.value,\r\n        })\r\n    }\r\n    saveChange=()=>{\r\n        this.props.modalEdit(\r\n            this.state.tasklist,\r\n            this.props.idx\r\n        )\r\n        this.props.onCancel();\r\n        console.log(\"hjfskdal\");\r\n    }\r\n\r\n \r\n    render() {\r\n        return (\r\n            <div className='modal'>\r\n                <input\r\n                    type='text'\r\n                    value={this.state.tasklist}\r\n                    placeholder={this.props.placeholder}\r\n                    onChange={(e)=>this.inputHandler(e)}\r\n                />\r\n                <br />\r\n                <TeamOmegalButton\r\n                    text='Change'\r\n                    buttonColor='blueviolet'\r\n                    onClick={this.saveChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamOmegalModalPopup;","import React, { Component } from 'react';\r\nimport TeamOmegalButton from './common/TeamOmegalButton';\r\nimport TeamOmegalModalPopup from './common/TeamOmegalModalPopup';\r\n\r\nclass ListGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           tasklist:\"\",\r\n            showModal: false,\r\n            idx:\"\"\r\n        };\r\n    }\r\n    showModalHandler = (text,idx) => {\r\n        this.setState({\r\n            ...this.state,\r\n            showModal: true,\r\n            tasklist:text,\r\n            idx:idx\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n           {this.state.showModal && <TeamOmegalModalPopup\r\n           idx={this.state.idx}\r\n           onCancel={()=>this.setState({\r\n               showModal:false\r\n           })}\r\n            modalEdit={this.props.modalEdit} task={this.state.tasklist} />}\r\n\r\n            <ul>\r\n                {this.props.tasklist.length !== 0 && this.props.tasklist.map((task, idx) =>\r\n\r\n                    <li key={idx}>{task}\r\n                        <span>\r\n                            <TeamOmegalButton\r\n                                buttonColor='blueviolet'\r\n                                text='EDIT'\r\n                                id={idx}\r\n\r\n                                onClick={()=>this.showModalHandler(task,idx)}\r\n                            />\r\n                            <TeamOmegalButton\r\n                                buttonColor='red'\r\n                                text='DELETE'\r\n                                id={idx}\r\n                                onClick={this.props.onDelete} />\r\n                        </span>\r\n\r\n                    </li>\r\n                )}\r\n\r\n            </ul>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListGroup;","import React, { Component } from 'react'\r\n\r\nexport default class TeamOmegalHeader extends Component {\r\n    render() {\r\n        return (\r\n            <h1>Welcome to To Do App</h1>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass TeamOmegalInputBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputVal: this.props.value,\r\n        };\r\n    }\r\n \r\n    onTrigger = (event) => {\r\n        this.setState({ inputVal: event.target.value })\r\n        this.props.parentCallback(event.target.value);\r\n        this.props.inputReset.isReset = false\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <input\r\n                type='text'\r\n                value={this.props.inputReset.isReset ? '' : this.state.inputVal}\r\n\r\n                placeholder={this.props.placeholder}\r\n                onChange={this.onTrigger}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamOmegalInputBox;","import React, { Component, Fragment } from 'react'\r\nimport ListGroup from './ListGroup'\r\nimport TeamOmegalButton from './common/TeamOmegalButton'\r\nimport TeamOmegalHeader from './common/TeamOmegalHeader'\r\nimport TeamOmegalInputBox from './common/TeamOmegalInputBox'\r\nimport TeamOmegalModalPopup from './common/TeamOmegalModalPopup'\r\nimport '../Todo.css'\r\nclass ToDolist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasklist: [],\r\n            taskName: '',\r\n            showModal: false,\r\n            resetInput: { isReset: false }\r\n\r\n        };\r\n    }\r\n    // addTask = () => {\r\n\r\n    //     this.setState(previousState => ({\r\n    //         tasklist: [...previousState.tasklist, this.state.taskName],\r\n    //         taskName: ''\r\n\r\n    //     }\r\n    //     )\r\n    //     );\r\n    //     console.log(\"tajklfdsaglafsk\", this.state.taskName);\r\n    //     this.setState({ taskName: \"\" })\r\n\r\n\r\n    // }\r\n    addTask = () => {\r\n\r\n        this.setState(previousState => ({\r\n            tasklist: [...previousState.tasklist, this.state.taskName],\r\n            resetInput: { isReset: true }\r\n        }));\r\n\r\n\r\n    }\r\n\r\n    editTask = (task, id) => {\r\n        let newList = [...this.state.tasklist]\r\n        newList = newList.map((element, idx) => {\r\n            if (idx === id) {\r\n                return task;\r\n            }\r\n            return element;\r\n        })\r\n        this.setState({\r\n            tasklist: newList\r\n        });\r\n\r\n\r\n\r\n    }\r\n    handleCallback = (childData) => {\r\n        this.setState({ taskName: childData })\r\n    }\r\n\r\n    deleteTask = (id) => {\r\n        let newList = [...this.state.tasklist]\r\n        newList = newList.filter((element, idx) => idx !== id)\r\n        this.setState({\r\n            tasklist: newList\r\n        });\r\n    }\r\n    showModalHandler = (id) => {\r\n        this.setState({\r\n            ...this.state,\r\n            showModal: true\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='todo'>\r\n                <TeamOmegalHeader />\r\n                <br />\r\n                {this.state.showModal && <TeamOmegalModalPopup />}\r\n                <div className='todo__main'>\r\n                    <div className=\"main__input\">\r\n                         <TeamOmegalInputBox\r\n                            placeholder='Enter you task'\r\n                            value={this.state.taskName}\r\n                            inputReset={this.state.resetInput}\r\n                            parentCallback={this.handleCallback} /> \r\n                        {/* <input\r\n                            type='text'\r\n                            value={this.state.taskName}\r\n                            placeholder={this.props.placeholder}\r\n                            onChange={(e)=>this.handleCallback(e)}\r\n                        /> */}\r\n                        <TeamOmegalButton\r\n                            buttonColor='Yellow'\r\n                            text='ADD'\r\n                            onClick={this.addTask}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n                <br />\r\n                <div className=\"todo__tasklist\">\r\n                    <ListGroup\r\n                        tasklist={this.state.tasklist}\r\n                        onDelete={this.deleteTask.bind(this)}\r\n                        onEdit={this.showModalHandler}\r\n                        modalEdit={this.editTask}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ToDolist","import React, { Component } from 'react'\r\nimport './App.css'\r\nimport ToDolist from './components/ToDolist'\r\nclass App2 extends Component {\r\n    render() {\r\n        return (\r\n            <ToDolist />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App2\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App2';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}